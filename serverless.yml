service: veggie-t-rex
custom:
  APP_ENV: ${env:SERVERLESS_APP}
provider:
  name: aws
  runtime: nodejs8.10
  stage: ${env:${self:custom.APP_ENV}_API_STAGE}
  profile: ${env:SERVERLESS_PROFILE}
  region: ${env:${self:custom.APP_ENV}_API_AWS_REGION}
  environment:
    AWS_API_ACCESS_KEY: ${env:${self:custom.APP_ENV}_API_AWS_ACCESS_KEY}
    AWS_API_SECRET_KEY: ${env:${self:custom.APP_ENV}_API_AWS_SECRET_KEY}
    AWS_API_REGION: ${env:${self:custom.APP_ENV}_API_AWS_REGION}
    APP: ${env:SERVERLESS_APP}
    STAGE: ${env:${self:custom.APP_ENV}_API_STAGE}
    NLB_URL: ${env:NLB_URL}
    CONTRACT_ADDRESS: ${env:CONTRACT_ADDRESS}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "lambda:InvokeFunction"
      Resource:
        - "*"
    - Effect: "Allow"
      Action:
        - "SNS:Publish"
      Resource:
        - "*"
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource:
        - "*" 
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
      Resource:
        - "*"
package:
  individually: true
  excludeDevDependencies: true
  exclude: 
    - 'src/**'
    - 'dist/**'
functions:
  uploadFilesPatient:
    handler: HelloWorldHandler.helloWorldHandler
    name: ${self:provider.stage}-${self:service}-helloWorldHandler
    events: 
      - http:
          path: ${self:service}/hello/{id}
          method: get
          cors: true
  getPatientRecordsHandler:
    handler: GetPatientRecordsHandler.getPatientRecordsHandler
    name: ${self:provider.stage}-${self:service}-getPatientRecords
    events: 
      - http:
          path: ${self:service}/patients/{patientId}/records
          method: get
          cors: true
  getPatientRecordByIdHandler:
    handler: GetPatientRecordByIdHandler.getPatientRecordByIdHandler
    name: ${self:provider.stage}-${self:service}-getPatientRecordByIdHandler
    events: 
      - http:
          path: ${self:service}/patients/{patientId}/records/{recordId}
          method: get
          cors: true
  getAllPatientsHandler:
    handler: ShowPatientsHandler.showPatientsHandler
    name: ${self:provider.stage}-${self:service}-showPatientsHandler
    events: 
      - http:
          path: ${self:service}/patients
          method: get
          cors: true
  getPatientInformationHandler:
    handler: GetPatientInformationHandler.getPatientInformationHandler
    name: ${self:provider.stage}-${self:service}-getPatientInformationHandler
    events: 
      - http:
          path: ${self:service}/patients/{patientId}
          method: get
          cors: true
  createRecordHandler:
    handler: CreateRecordHandler.createRecordHandler
    name: ${self:provider.stage}-${self:service}-createRecordHandler
    events: 
      - http:
          path: ${self:service}/records
          method: post
          cors: true
  searchPatientHandler:
    handler: SearchPatientHandler.searchPatientHandler
    name: ${self:provider.stage}-${self:service}-searchPatientHandler
    events: 
      - http:
          path: ${self:service}/patients/search
          method: post
          cors: true
  getBCTransactionsHandler:
    handler: GetBCTransactionsHandler.getBCTransactionsHandler
    vpc:
    securityGroupIds:
      - sg-088367e646899999d
      - sg-0a3c1e5c1620e90e4
    subnetdIds:
      - subnet-0d27651c4681e4e0d
      - subnet-039b7250f768f97bf
      - subnet-0fe2ed0824929e81d
    name: ${self:provider.stage}-${self:service}-getBCTransactionsHandler
    events: 
      - http:
          path: ${self:service}/getTransactions
          method: post
          cors: true
  getBCTransactionParamsHandler:
    handler: GetBCTransactionParamsHandler.getBCTransactionParamsHandler
    vpc:
    securityGroupIds:
      - sg-088367e646899999d
      - sg-0a3c1e5c1620e90e4
    subnetdIds:
      - subnet-0d27651c4681e4e0d
      - subnet-039b7250f768f97bf
      - subnet-0fe2ed0824929e81d
    name: ${self:provider.stage}-${self:service}-getBCTransactionParamsHandler
    events: 
      - http:
          path: ${self:service}/getTransactionParams
          method: post
          cors: true
  sendBCTransactionHandler:
    handler: SendBCTransactionHandler.sendBCTransactionHandler
    vpc:
    securityGroupIds:
      - sg-088367e646899999d
      - sg-0a3c1e5c1620e90e4
    subnetdIds:
      - subnet-0d27651c4681e4e0d
      - subnet-039b7250f768f97bf
      - subnet-0fe2ed0824929e81d
    name: ${self:provider.stage}-${self:service}-sendBCTransactionHandler
    events: 
      - http:
          path: ${self:service}/sendTransaction
          method: post
          cors: true
